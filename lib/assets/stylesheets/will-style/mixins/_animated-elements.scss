//
// Animated Elements Mixins and Helpers
//

// Variables
$animated-element-prop: "data-animated" !default;
$animated-element-default-prop: "data-animated-default" !default;
$animated-element-left-prop: "data-animated-left" !default;
$animated-element-right-prop: "data-animated-right" !default;
$animated-element-delay-prop: "data-animated-delay" !default;
$animated-element-active-prop: "data-animated-active" !default;
$animated-element-progressive-prop: "data-animated-progressive" !default;
$animated-element-progressive-position-prop: "data-animated-progressive-position" !default;

$animated-element-selector: "[#{$animated-element-prop}]" !default;
$animated-element-default-selector: "[#{$animated-element-default-prop}]" !default;
$animated-element-left-selector: "[#{$animated-element-left-prop}]" !default;
$animated-element-right-selector: "[#{$animated-element-right-prop}]" !default;
$animated-element-active-selector: "[#{$animated-element-active-prop}]" !default;
$animated-element-progressive-selector: "[#{$animated-element-progressive-prop}]" !default;

// Yield function for initializing transitions on animated elements

@mixin animated-element-init {
	&#{$animated-element-selector} {
		@content;
	}
}

// Yield function for setting up transitions on animated elements activating

@mixin animated-element-active {
	&#{$animated-element-active-selector} {
		@content;
	}
}

@mixin animated-element-default($includes-root-element: true) {
	@if $includes-root-element == true {
		&#{$animated-element-default-selector} {
			@content;
		}
	} @else {
		#{$animated-element-default-selector} {
			@content;
		}
	}
}

@mixin animated-element-left($includes-root-element: true) {
	@if $includes-root-element == true {
		&#{$animated-element-left-selector} {
			@content;
		}
	} @else {
		#{$animated-element-left-selector} {
			@content;
		}
	}
}

@mixin animated-element-right($includes-root-element: true) {
	@if $includes-root-element == true {
		&#{$animated-element-right-selector} {
			@content;
		}
	} @else {
		#{$animated-element-right-selector} {
			@content;
		}
	}
}

@mixin animated-element-progressive {
	&#{$animated-element-progressive-selector} {
		@content;
	}
}

@mixin animated-element-progressive-position($position: 0) {
	&#{$animated-element-progressive-selector} {
		&[#{$animated-element-progressive-position-prop}="#{$position}"] {
			@content;
		}
	}
}

@mixin animated-element-delay($ms: 0, $delay: -1, $includes-root-element: true) {
	@if $delay == -1 {
		$delay: $ms;
	}

	@if $includes-root-element == true {
		&[#{$animated-element-delay-prop}="#{$ms}"] {
			@include animated-element-active {
				transition-delay: #{$delay}ms !important;
			}
		}
	} @else {
		[#{$animated-element-delay-prop}="#{$ms}"] {
			@include animated-element-active {
				transition-delay: #{$delay}ms !important;
			}
		}
	}
}

@mixin animated-element-delay-block($ms: 0) {
	&[#{$animated-element-delay-prop}="#{$ms}"] {
		@include animated-element-active {
			@content;
		}
	}
}
