//
// Default Animation for Animated Elements
//

@include animated-element-default($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: translateY(15%);

		transition: opacity $animation-duration $animation-timing-function,
					transform $animation-duration $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		transform: translateY(0);
	}
}

@include animated-element-top($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: translateY(-15%);

		transition: opacity $animation-duration $animation-timing-function,
					transform $animation-duration $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		transform: translateY(0);
	}
}

@include animated-element-left($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: translateX(-15%);

		transition: opacity $animation-duration $animation-timing-function,
					transform $animation-duration $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		transform: translateY(0);
	}
}

@include animated-element-right($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: translateX(15%);

		transition: opacity $animation-duration $animation-timing-function,
					transform $animation-duration $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		transform: translateY(0);
	}
}

@include animated-element-opacity($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: none;

		transition: opacity $animation-duration $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		transform: none;
	}
}

@for $i from 1 through 50 {
	@include animated-element-delay($ms: $i * 100, $includes-root-element: false);
}

@include animated-element-hidden-after($includes-root-element: false) {
	@include animated-element-after {
		opacity: 0;
		transition-delay: 0s !important;
	}
}

// STAT NUMS => Move a Greater Distance on the Y

@include animated-number-top($includes-root-element: false) {
	// @NOTE: Number animations require elements to have an active display property.
	//        This can affect layout, so be careful.
	display: inline-block;

	@include animated-element-init {
		opacity: 0;
		transform: translateY(50%);

		transition: opacity $animation-duration $animation-timing-function,
					transform $animation-duration $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		transform: translateY(0);
	}
}

@include animated-number-bottom($includes-root-element: false) {
	// @NOTE: Number animations require elements to have an active display property.
	//        This can affect layout, so be careful.
	display: inline-block;

	@include animated-element-init {
		opacity: 0;
		transform: translateY(-50%);

		transition: opacity $animation-duration $animation-timing-function,
					transform $animation-duration $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		transform: translateY(0);
	}
}

// MODERN RISE BLOCKS

@include animated-fast-rise-blocks($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: translateY(100%);
		display: block;
		transition: opacity .2s $animation-timing-function,
					transform .2s $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		display: block;
		transform: translateY(0);
	}
}

@include animated-normal-rise-blocks($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: translateY(100%);
		display: block;
		transition: opacity .4s $animation-timing-function,
					transform .4s $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		display: block;
		transform: translateY(0);
	}
}

@include animated-slow-rise-blocks($includes-root-element: false) {
	@include animated-element-init {
		opacity: 0;
		transform: translateY(100%);
		display: block;
		transition: opacity .6s $animation-timing-function,
					transform .6s $animation-timing-function;
	}

	@include animated-element-active {
		opacity: 1;
		display: block;
		transform: translateY(0);
	}
}

//
// Image Background Progessive data-animated-progressive-position
//

@include animated-element-progressive-default {
	@include animated-element-progressive {
		transition: transform 300ms linear;
	}
}

@for $i from 1 through 100 {
	@include animated-element-progressive-default {
		@include animated-element-progressive-position($i) {
			transform: translateY(#{0 - $i * 2}px);
		}
	}
}
