/*!
 *
.||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||.

	.                                      '||            .
  .||.  .... ... ... ...    ....  ... ...   ||   ....   .||.    ....
   ||    '|.  |   ||'  || .|...||  ||'  ||  ||  '' .||   ||   .|...||
   ||     '|.|    ||    | ||       ||    |  ||  .|' ||   ||   ||
   '|.'    '|     ||...'   '|...'  ||...'  .||. '|..'|'  '|.'  '|...'
		.. |      ||               ||
		 ''      ''''             ''''      A Typographic Starter Kit

  URL ........... http://typeplate.com
  VERSION ....... 1.1.2
  Github ........ https://github.com/typeplate/typeplate.github.io
  AUTHORS ....... Dennis Gaebel (@gryghostvisuals) & Zachary Kain (@zakkain)
  LICENSE ....... Creative Commmons Attribution 3.0
  LICENSE URL ... http://creativecommons.org/licenses/by/3.0

 .||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||..||.
 *
 */





// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Fontfaces
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Fontface $Unicode-Range-Ampersand
// -------------------------------------//

@font-face {
	font-family: '#{$amp-fontface-name}';
	src: $amp-fontface-source;
	unicode-range: U+0026;
}

// Ampersand fallback font for unicode range
@font-face {
	font-family: '#{$amp-fontface-name}';
	src: $amp-fontface-fallback;
	unicode-range: U+270C;
}


// $Fontface $Icon-Font-Helper
// -------------------------------------//
// ICON FONT HELPER
// In order to use this hot rod you must have the following…
// 1. Compass.
// 2. Create a 'fonts' directory in the root of your project.
// 3. Specify within your 'config.rb' file the following line…
//
// fonts_dir = "name-of-your-fonts-directory" ( i.e. fonts_dir = "fonts" )
//
// Example usage:
// ex.1) $icon-fonts: (icon-name);
// ex.2) $icon-fonts: (icon-name1, icon-name2, icon-name3);
//
// Additional Notes:
// @include font-face() is a Compass helper function
// based on this gist by Chris Van Patten
// https://gist.github.com/4469518

@if ($icon-fonts != null) {
	@each $font in $icon-fonts {
		@include font-face( $font,
			font-files(
				'#{$font}/#{$font}.woff',
				'#{$font}/#{$font}.ttf',
				'#{$font}/#{$font}.svg', svg
			),
			'#{$font}/#{$font}.eot'
			)
	}
}


// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //
//
// $Typeplate Styles
//
// .x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x //


// $Styles $Globals
// -------------------------------------//

html {
	@if $custom-font-family {
		font: $font-weight #{$font-size}%/#{$line-height} $custom-font-family, $font-family;
	} @else {
		font: $font-weight #{$font-size}%/#{$line-height} $font-family;
	}
}

// Custom Responsiveness
@media (min-width: $screen-ms-min) {
	html {
		font-size: 87.5%;
	}
}

@media (min-width: $screen-sm-min) {
	html {
		font-size: 100%;
		font-weight: 300;
	}
}

@media (min-width: $screen-md-min) {
	html {
		font-size: 112.5%;
	}
}

body {
	// Ala Trent Walton
	@include css-hyphens(auto);

	// normal: Indicates that lines may only break at normal word break points.
	// break-word : Indicates that normally unbreakable words may be broken at ...
	// arbitrary points if there are no otherwise acceptable break points in the line.
	@extend %breakword;
	color: $body-copy-color;
}

small, .small {
	font-size: $small-print-size;
}


// $Styles $Headings
// -------------------------------------//

// Extend included classes on any element of your
// choosing for adjusting type based on the scale
// provided.

// For example:

// <h6 class="giga">Awesome Headline</h6>
// <p class="tera">a story about a dude</p>

// Our Type Scale is as follows with px fallbacks
// for IE 6-8 as they do not understand REM units.
//
// 18, 21, 24, 36, 48, 60, 72, 90, 117

// styles for all headings, in the style of @csswizardry
%hN {
	text-rendering: optimizeLegibility; // voodoo to enable ligatures and kerning
	line-height: $heading-line-height; // 1 is not enough
	margin-top: 0;
}

// Multi-dimensional array, where:
// the first value is the name of the class
// and the second value is the variable for the size
$sizes: tera $tera, giga $giga, mega $mega, alpha $alpha, beta $beta, gamma $gamma, delta $delta, epsilon $epsilon, zeta $zeta;

// Sass loop to associate h1-h6 tags with their appropriate greek
// heading based on a modular scale.
// for each size in the scale, create a class
@each $size in $sizes {
	.#{nth($size, 1)} {
		@include type-scale(nth($size, 2), $font-base, '#{$type-scale-unit-value}', $measure);
		font-weight: 300;
	}
}

.epsilon, .zeta {
	font-weight: bold;
}

// associate h1-h6 tags with their appropriate greek heading
h1 {
	@extend .alpha;
	@extend %hN;
	line-height: 1;
}

h2 {
	@extend .beta;
	@extend %hN;
}

h3 {
	@extend .gamma;
	@extend %hN;
}

h4 {
	@extend .delta;
	@extend %hN;
}

h5 {
	@extend .epsilon;
	@extend %hN;
}

h6 {
	@extend .zeta;
	@extend %hN;
}


// $Styles $Parargraphs
// -------------------------------------//

p {
	margin: auto 0 $indent-val;

	// Conditonal Check For Paragraph Styling
	@if $paragraph-vertical-whitespace == false {
		& + p {
			//siblings indentation
			text-indent: $indent-val;
			margin-top: -$indent-val;
		}
	}
}


// $Styles $Hyphenation
// -------------------------------------//
// http://meyerweb.com/eric/thoughts/2012/12/17/where-to-avoid-css-hyphenation

abbr,
acronym,
blockquote,
code,
dir,
kbd,
listing,
plaintext,
q,
samp,
tt,
var,
xmp {
	@include css-hyphens(none);
}


// $Styles $Codeblocks
// -------------------------------------//

pre {
	@include white-space(pre);
}

code {
	@include white-space(nowrap);
	font-family: monospace;
}

pre code {
	@extend %normal-wrap;
	@include white-space(pre-wrap);
}


// $Styles $Smallcaps
// -------------------------------------//
/**
 * Abbreviations Markup
 *
	<abbr title="hyper text markup language">HMTL</abbr>
 *
 * Extend this object into your markup.
 *
 */
abbr {
	@include smallcaps($small-caps-color, $small-caps-weight);
	&[title]:hover {
		cursor: help;
	}
}


// $Styles $Headings-Color
// -------------------------------------//

h1,
h2,
h3,
h4,
h5,
h6 {
	color: $heading-color;
}


// $Styles $Dropcap
// -------------------------------------//

// Combats our sibling paragraphs syling and indentation
// As not to ruin our beautiful drop caps.
p + .drop-cap {
	text-indent: 0;
	margin-top: 0;
}

.drop-cap {
	@include dropcap($dropcap-float-position, $dropcap-font-size, $dropcap-font-family, $dropcap-txt-indent, $dropcap-margin, $dropcap-padding, $dropcap-color, $dropcap-line-height, $dropcap-bg);
}


// $Styles $Definition-Lists
// -------------------------------------//
/**
 * Lining Definition Style Markup
 *
	<dl class="lining">
		<dt><b></b></dt>
		<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.lining {
	@include definition-list-style(lining);
}

/**
 * Dictionary Definition Style Markup
 *
	<dl class="dictionary-style">
		<dt><b></b></dt>
			<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.dictionary-style {
	@include definition-list-style(dictionary-style);
}


// $Styles $Blockquote-Markup
// -------------------------------------//
/**
 * Blockquote Markup
 *
		<figure>
			<blockquote cite="">
				<p></p>
			</blockquote>
			<figcaption>
				<cite>
					<small><a href=""></a></small>
				</cite>
			</figcaption>
		</figure>
 *
 * Extend this object into your markup.
 *
 */


// $Styles $Pull-Quotes
// -------------------------------------//
// http://24ways.org/2005/swooshy-curly-quotes-without-images
//
// http://todomvc.com - Thanks sindresorhus!
// https://github.com/typeplate/typeplate.github.io/issues/49

/**
 * Pull Quotes Markup
 *
	<aside class="pull-quote">
		<blockquote>
			<p></p>
		</blockquote>
	</aside>
 *
 * Extend this object into your custom stylesheet.
 *
 */

.pull-quote {
	 @include pull-quotes($pull-quote-fontsize, $pull-quote-opacity, $pull-quote-color);
}


// $Styles $Figures
// -------------------------------------//
/**
 * Figures Markup
 *
	<figure>
		<figcaption>
			<strong>Fig. 4.2 | </strong>Type Anatomy, an excerpt from Mark Boulton's book<cite title="http://designingfortheweb.co.uk/book/part3/part3_chapter11.php">"Designing for the Web"</cite>
		</figcaption>
	</figure>
 *
 * Extend this object into your markup.
 *
 */


// $Styles $Footnotes
// -------------------------------------//
/**
 * Footnote Markup : Replace 'X' with your unique number for each footnote
 *
	<article>
		<p><sup><a href="#fn-itemX" id="fn-returnX"></a></sup></p>
		<footer>
			<ol class="foot-notes">
				<li id="fn-itemX"><a href="#fn-returnX">↩</a></li>
			</ol>
		</footer>
	</article>
 *
 * Extend this object into your markup.
 *
 */
