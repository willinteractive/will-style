//
// TYPOGRAPHY
//
//

@font-face {
	font-family: 'Core Sans';
	src: asset-url('core-sans/core-sans-light.woff2') format('woff2'),

		 // @NOTE: woff and eot version is funky on IE9
		 // asset-url('core-sans/core-sans-light.eot') format('embedded-opentype'),
		 // asset-url('core-sans/core-sans-light.woff') format('woff'),
		 asset-url('core-sans/core-sans-light.ttf') format('truetype'),
		 asset-url('core-sans/core-sans-light.svg') format('svg');

	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: 'Core Sans';
	src: asset-url('core-sans/core-sans-light-italic.woff2') format('woff2'),

		 // @NOTE: woff and eot version is funky on IE9
		 // asset-url('core-sans/core-sans-light-italic.eot') format('embedded-opentype'),
		 // asset-url('core-sans/core-sans-light-italic.woff') format('woff'),
		 asset-url('core-sans/core-sans-light-italic.ttf') format('truetype'),
		 asset-url('core-sans/core-sans-light-italic.svg') format('svg');

	font-weight: normal;
	font-style: italic;
}

@font-face {
	font-family: 'Core Sans';
	src: asset-url('core-sans/core-sans-medium.woff2') format('woff2'),

		 // @NOTE: woff and eot version is funky on IE9
		 // asset-url('core-sans/core-sans-medium.eot') format('embedded-opentype'),
		 // asset-url('core-sans/core-sans-medium.woff') format('woff'),
		 asset-url('core-sans/core-sans-medium.ttf') format('truetype'),
		 asset-url('core-sans/core-sans-medium.svg') format('svg');

	font-weight: bold;
	font-style: normal;
}

@font-face {
	font-family: 'Core Sans';
	src: asset-url('core-sans/core-sans-medium-italic.woff2') format('woff2'),

		 // @NOTE: woff version is funky on IE9
		 // asset-url('core-sans/core-sans-medium-italic.eot') format('embedded-opentype'),
		 // asset-url('core-sans/core-sans-medium-italic.woff') format('woff'),
		 asset-url('core-sans/core-sans-medium-italic.ttf') format('truetype'),
		 asset-url('core-sans/core-sans-medium-italic.svg') format('svg');

	font-weight: bold;
	font-style: italic;
}

@font-face {
	font-family: 'Core Sans Condensed';
	src: asset-url('core-sans/core-sans-condensed.woff2') format('woff2'),

		 // @NOTE: woff version is funky on IE9
		 // asset-url('core-sans/core-sans-condensed.eot') format('embedded-opentype'),
		 // asset-url('core-sans/core-sans-condensed.woff') format('woff'),
		 asset-url('core-sans/core-sans-condensed.ttf') format('truetype'),
		 asset-url('core-sans/core-sans-condensed.svg') format('svg');

	font-weight: normal;
	font-style: normal;
}

// VARIABLES
$header-font-family: 		"Core Sans", "Open Sans", "San Francisco", "Calibri", Helvetica, sans-serif;
$header-font-weight: 		$font-weight-light;
$header-font-style: 		normal;
$paragraph-font-weight:		$font-weight-normal;
$small-font-size: 			75%;

$h1-font-reduction: rem-calc(15) !default;
$h2-font-reduction: rem-calc(13) !default;
$h3-font-reduction: rem-calc(7) !default;
$h4-font-reduction: rem-calc(5) !default;
$h5-font-reduction: rem-calc(1) !default;
$h6-font-reduction: 0 !default;

$secondary-font-color: scale-color($body-font-color, $lightness: 50%);

// IMPORT FOUNDATION
@import "foundation/components/type";

// CUSTOM MIXINS
// ---------------------
// force the wrapping of long links/emails/etc.
@mixin force-wrap() {
	overflow-wrap: break-word;
	word-wrap: break-word;

	-ms-word-break: break-all;
	/* This is the dangerous one in WebKit, as it breaks things wherever */
	word-break: break-all;
	/* Instead use this non-standard one: */
	word-break: break-word;
}

@mixin force-truncate($width: 100%) {
	width: $width;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

// CUSTOM STYLES
// ---------------------

// Make the smaller headers bold
h5, h6 {
	font-weight: $font-weight-bold;
}

// make the large sized paragraphs use the light weight font
p.lead {
	font-weight: $font-weight-light;
}

// Colors
.text-secondary {
	color: $secondary-font-color !important;
}
.text-primary {
	color: $primary-color !important;
}
.text-alert {
	color: $alert-color !important;
}
.text-warning {
	color: $warning-color !important;
}
.text-success {
	color: $success-color !important;
}
.text-info {
	color: $info-color !important;
}

// custom class for creating borders between list items
ul.divided, ol.divided {
	& > li {
		// give items padding top and bottom
		padding-top: rem_calc(7);
		padding-bottom: rem_calc(5);

		// then a border top as well as bottom on last item
		border-top: 1px solid $component-border-color;

		&:last-of-type {
			border-bottom: 1px solid $component-border-color;
		}
	}
}

// Foundation chaged the style of the code elements from red to bordered
// but we don't want that when it's inside a pre block
pre > code {
	border: none;
	background: none;
}

// creating a custom list style for .large-stats
// this is a definition list, use the following html:
// <dl class="large-stats">
//	<dt>
//	 <dd class="stat"></dd>
//  </dt>
// </dl>
dl.stats.large {

	// use flex to justify each item
	display: flex;
	dd {
		flex-grow: 1;

		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		text-align: center;
	}

	// make sure the stat is on it's own line and make large
	.stat {
		font-size: 4em;
		line-height: 1.2em;
		margin: .2em 0;
		display: block;
	}
}

// Utility for not allowing text to wrap
.no-break {
	white-space: nowrap;
}

// allowing a way to use css3 columns
// use the following class: text-columns-#
[class*="text-column"] {
	column-count: 2;

	// if this is a list, we need to move the bullet positions inside
	// or else they won't show in some browsers
	li {
		list-style-position: inside;
	}
	// and remove margin
	margin-left: 0;

}

// adding a class for p tags that sets a max width for ideal line length
.ideal {
	max-width: 36em;

	// make sure text stays centered
	&.text-center {
		margin-left: auto;
		margin-right: auto;
	}
}
