/* 
// 
// FORMS
// 
*/


// Common form controls
// ---------------------------

// remove box shadow and reduce text color from 
// Disabled and read-only inputs
.form-control {
	&[disabled],
  &[readonly],
  fieldset[disabled] {
		@include box-shadow(none);
		color: $text-muted;
  } 
}


// Feedback states
// ---------------------------

// extend the rails added class to inherit from bootstrap's has-error class
.field_with_errors {
	@extend .has-error;
}


// Custom elements
// ---------------------------

/*  THIS NEEDS TO BE RE-DONE (CH)
//  create an on/off switch ONLY for Chrome and Safari
@media screen and (-webkit-min-device-pixel-ratio:0) {
	.generatedcontent .switch {
	  input[type="checkbox"] {
			display: block;
			height: 22px;
	    width: 40px;
			position: relative;
			cursor: pointer;
			// background
	    -webkit-appearance: none;
	    border-radius: $border-radius-base;
			@include gradient-vertical($red, lighten($red, 5%));
	    @include box-shadow(inset 0 0 5px rgba(0,0,0, .25));
	    // knob
	    &:before {
				@include gradient-vertical(white, #f0f0f0);
	      border: 1px solid white;
	      border-radius: $border-radius-base / 2;
	      @include box-shadow(0 0 4px rgba(0,0,0,0.3));
	      content: '';
	      display: block;
	      height: 14px;
	      position: relative;
	      top: 3px;
	      left: 3px;
	      width: 14px;
	    }
	    // x and checkmarks
	    &:after {	     
				content: "";
				background-image: url($iconWhiteSpritePath);
				background-position: -288px 0; 
	      display: block;
	      width: 14px;
				height: 14px;      
	      position: absolute;
	      top: 4px;
				left: 22px;      
	    }
	    // when checked
	    &:checked {
	      background-color: $green;
				@include gradient-vertical($green, lighten($green, 5%));
	      &:before {
	         left: 21px;
	      }
	      &:after {
					background-position: -312px 0;
					left: 4px;            
	      }
	    }    
	  }
	}

	// use FontAwesome if font-face is available
	.fontface.generatedcontent .switch input[type="checkbox"]:after {	  
		content: "\f00d";
		background: none;
		font-family: FontAwesome;
		font-weight: 400;
		font-style: normal;
		color: white;
		font-size: 14px;    
		text-shadow: 0 -2px 0 rgba(0, 0, 0, 0.2);
		text-decoration: inherit;
		line-height: 28px;
		top: -3px;
		left: 23px;
	}

	.fontface.generatedcontent .switch input[type="checkbox"]:checked:after {
		content: "\f00c";
		left: 4px;
	}
}
*/
